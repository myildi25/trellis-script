name: Trellis Generator Auto-Run

on:
  # Manual trigger with auto-continue option
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "yes" to start processing'
        required: true
        default: 'no'
      auto_continue:
        description: 'Automatically continue if time limit reached?'
        required: true
        default: 'yes'
        type: choice
        options:
          - 'yes'
          - 'no'

jobs:
  generate:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # GitHub's hard limit (as safety)
    
    outputs:
      should_continue: ${{ steps.check-continue.outputs.should_continue }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_trellis.txt
    
    - name: Run Trellis Generator (5h 55m limit)
      if: ${{ github.event.inputs.confirm == 'yes' }}
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
        TRELLIS_API_URL: ${{ secrets.TRELLIS_API_URL }}
      run: |
        echo "üöÄ Starting Trellis 3D Generation"
        echo "‚è∞ Will run for up to 5 hours 55 minutes"
        echo "This job started at: $(date)"
        
        # Run with timeout of 5h 55m (355 minutes = 21300 seconds)
        # The timeout command will gracefully kill the process
        timeout --signal=SIGTERM --kill-after=30s 21300 python trellis_3d_generator_simple.py || EXIT_CODE=$?
        
        # Check if it was killed by timeout (exit code 124)
        if [ "${EXIT_CODE:-0}" -eq 124 ]; then
          echo "‚è∞ Time limit reached after 5h 55m - script will continue in next run"
          echo "TIMEOUT_REACHED=true" >> $GITHUB_ENV
        elif [ "${EXIT_CODE:-0}" -eq 0 ]; then
          echo "‚úÖ Processing completed successfully!"
          echo "TIMEOUT_REACHED=false" >> $GITHUB_ENV
        else
          echo "‚ùå Script failed with exit code: ${EXIT_CODE:-0}"
          exit ${EXIT_CODE:-1}
        fi
    
    - name: Check if should continue
      id: check-continue
      run: |
        if [[ "${{ env.TIMEOUT_REACHED }}" == "true" ]] && [[ "${{ github.event.inputs.auto_continue }}" == "yes" ]]; then
          echo "should_continue=true" >> $GITHUB_OUTPUT
          echo "üìä Will trigger another run to continue processing"
        else
          echo "should_continue=false" >> $GITHUB_OUTPUT
          echo "üèÅ Processing finished or auto-continue disabled"
        fi

  trigger-next-run:
    needs: generate
    if: ${{ needs.generate.outputs.should_continue == 'true' }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Trigger next run
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "üîÑ Triggering next run to continue processing..."
        
        # Wait 30 seconds to avoid rate limits
        sleep 30
        
        # Trigger the workflow again
        curl -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/${{ github.repository }}/actions/workflows/trellis-autorun.yml/dispatches" \
          -d '{
            "ref": "${{ github.ref }}",
            "inputs": {
              "confirm": "yes",
              "auto_continue": "${{ github.event.inputs.auto_continue }}"
            }
          }'
        
        echo "‚úÖ Next run triggered successfully!"
